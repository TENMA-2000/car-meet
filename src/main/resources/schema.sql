CREATE TABLE IF NOT EXISTS roles (
	role_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
	user_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	phone_number VARCHAR(50) /*MVPでは未使用だが、将来的に使用するカラム*/,
	profile_image TEXT,
	car_life_year INT,
	gender TINYINT,
	introduction VARCHAR(255),
	hobbies VARCHAR(255),
	role_id INT NOT NULL,
	enabled BOOLEAN NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (role_id) REFERENCES roles (role_id)
);

CREATE TABLE IF NOT EXISTS posts (
	post_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id INT NOT NULL,
	caption TEXT,
	media_url VARCHAR(255),
	media_type VARCHAR(50),
	is_story BOOLEAN NOT NULL,
	expires_at DATETIME,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	deleted_at DATETIME,
	view_count INT NOT NULL DEFAULT 0,
	like_count INT NOT NULL DEFAULT 0,
	location_name VARCHAR(255),
	latitude DOUBLE,
	longitude DOUBLE,
	FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS likes (
	like_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	post_id INT NOT NULL,
	user_id INT NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UNIQUE KEY (user_id, post_id),
	FOREIGN KEY (post_id) REFERENCES posts(post_id) ON DELETE CASCADE,
	FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
	comment_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	post_id INT NOT NULL,
	user_id INT NOT NULL,
	parent_comment_id INT,
	content TEXT NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	deleted_at DATETIME,
	FOREIGN KEY (post_id) REFERENCES posts(post_id) ON DELETE CASCADE,
	FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS talk_rooms (
    talk_room_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    owner_user_id INT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at DATETIME NULL,
    FOREIGN KEY (owner_user_id) REFERENCES users(user_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS talk_room_participants (
    participant_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    talk_room_id INT NOT NULL,
    user_id INT NOT NULL,
    joined_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    left_at DATETIME NULL,
    UNIQUE KEY (talk_room_id, user_id),
	FOREIGN KEY (talk_room_id) REFERENCES talk_rooms(talk_room_id) ON DELETE CASCADE,
	FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS talk_room_messages (
    message_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    talk_room_id INT NOT NULL,
    sender_user_id INT NOT NULL,
    content TEXT NOT NULL,
    sent_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    attachment_url VARCHAR(255) NULL,
    is_deleted_by_sender BOOLEAN NOT NULL DEFAULT FALSE,
    parent_message_id INT NULL,
    FOREIGN KEY (talk_room_id) REFERENCES talk_rooms(talk_room_id) ON DELETE CASCADE,
	FOREIGN KEY (sender_user_id) REFERENCES users(user_id) ON DELETE CASCADE,
	FOREIGN KEY (parent_message_id) REFERENCES talk_room_messages(message_id) ON DELETE SET NULL
);